#define _XTAL_FREQ 4000000
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>
#include <xc.h>

// BEGIN CONFIG
#pragma config FOSC = HS // Oscillator Selection bits (HS oscillator)
#pragma config WDTE = ON // Watchdog Timer Enable bit (WDT enabled)
#pragma config PWRTE = OFF // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = ON // Brown-out Reset Enable bit (BOR enabled)
#pragma config LVP = OFF // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF // Flash Program Memory Code Protection bit (Code protection off)
//END CONFIG
int tem = 500; 
void led1(int);
void led2(int);
void led3(int);

int main()
{
  TRISB0 = 0; //RB0 as Output PIN
  TRISB1 = 0; //RB1 as Output PIN
  TRISB2 = 0; //RB2 as Output PIN
  while(1)
  {
    led1(1);  // LED ON
    __delay_ms(700); // 1 Second Delay
    led1(0);// LED OFF
    __delay_ms(700); // 1 Second Delay
    led2(1);  // LED ON
    __delay_ms(700); // 1 Second Delay
    led2(0);// LED OFF
    __delay_ms(700); // 1 Second Delay
    led3(1);  // LED ON
    __delay_ms(700); // 1 Second Delay
    led3(0);// LED OFF
    __delay_ms(700); // 1 Second Delay
  }
  return 0;
}
void led1(int como){
    RB1 = 0;
    if(como == 0){
        RB0 = 0;
    } else{
         RB0 = 1;
    }
}

void led2(int como){
    RB0 = 0;
    if(como == 0){
        RB1 = 0;
    } else{
         RB1 = 1;
    }
}

void led3(int como){
    RB0 = 0;
    RB1 = 0;
    if(como == 0){
        RB2 = 0;
    } else{
         RB2 = 1;
    }
}
